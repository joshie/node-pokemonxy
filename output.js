var names      = require('./names.js');
var printf     = require('util').format;
var output     = new Object;
module.exports = output;

output.log = function(pkx) { 
  console.log('%s: %s', '    PkxEncryptionKey', pkx.readPkxEncryptionKey());
  console.log('%s: %s', '   SanityPlaceholder', pkx.readSanityPlaceholder());
  console.log('%s: %s', '            Checksum', pkx.readChecksum());
  console.log('%s: %s', '   NationalPokedexID', pkx.readNationalPokedexID());
  console.log('%s: %s', '             Species', names.pokemon[pkx.readNationalPokedexID()]);
  console.log('%s: %s', '            HeldItem', names.items[pkx.readHeldItem()]);
  console.log('%s: %s', '                OTID', pkx.readOTID());
  console.log('%s: %s', '          OTSecretID', pkx.readOTSecretID());
  console.log('%s: %s', '    ExperiencePoints', pkx.readExperiencePoints());
  console.log('%s: %s', '             Ability', names.abilities[pkx.readAbility()]);
  console.log('%s: %s', '       AbilityNumber', pkx.readAbilityNumber());
  console.log('%s: %s', '    PersonalityValue', pkx.readPersonalityValue());
  console.log('%s: %s', '              Nature', names.natures[pkx.readNature()]);
  console.log('%s: %s', '    FatefulEncounter', names.flag[pkx.readFatefulEncounter()]);
  console.log('%s: %s', '              Gender', names.gender[pkx.readGender()]);
  console.log('%s: %s', '          Genderless', names.flag[pkx.readGenderless()]);
  console.log('%s: %s', '                Form', pkx.readForm());
  console.log('%s: %s', '       HPEffortValue', pkx.readHPEffortValue());
  console.log('%s: %s', '   AttackEffortValue', pkx.readAttackEffortValue());
  console.log('%s: %s', '  DefenseEffortValue', pkx.readDefenseEffortValue());
  console.log('%s: %s', '    SpeedEffortValue', pkx.readSpeedEffortValue());
  console.log('%s: %s', ' SPAttackEffortValue', pkx.readSPAttackEffortValue());
  console.log('%s: %s', 'SPDefenseEffortValue', pkx.readSPDefenseEffortValue());
  console.log('%s: %s', '             Pokerus', names.flag[pkx.readPokerus()]);
  console.log('%s: %s', '        KalosRibbons', pkx.readKalosRibbons());
  console.log('%s: %s', '            Nickname', pkx.readNickname());
  console.log('%s: %s', '             Move1ID', names.moves[pkx.readMove1ID()]);
  console.log('%s: %s', '             Move2ID', names.moves[pkx.readMove2ID()]);
  console.log('%s: %s', '             Move3ID', names.moves[pkx.readMove3ID()]);
  console.log('%s: %s', '             Move4ID', names.moves[pkx.readMove4ID()]);
  console.log('%s: %s', '      Move1CurrentPP', pkx.readMove1CurrentPP());
  console.log('%s: %s', '      Move2CurrentPP', pkx.readMove2CurrentPP());
  console.log('%s: %s', '      Move3CurrentPP', pkx.readMove3CurrentPP());
  console.log('%s: %s', '      Move4CurrentPP', pkx.readMove4CurrentPP());
  console.log('%s: %s', '           MovePPUps', pkx.readMovePPUps());
  console.log('%s: %s', '   Move1IDAtHatching', names.moves[pkx.readMove1IDAtHatching()]);
  console.log('%s: %s', '   Move2IDAtHatching', names.moves[pkx.readMove2IDAtHatching()]);
  console.log('%s: %s', '   Move3IDAtHatching', names.moves[pkx.readMove3IDAtHatching()]);
  console.log('%s: %s', '   Move4IDAtHatching', names.moves[pkx.readMove4IDAtHatching()]);
  console.log('%s: %s', '   Move4IDAtHatching', names.moves[pkx.readMove4IDAtHatching()]);
  console.log('%s: %s', '                IVHP', pkx.readIVHP());
  console.log('%s: %s', '            IVAttack', pkx.readIVAttack());
  console.log('%s: %s', '           IVDefense', pkx.readIVDefense());
  console.log('%s: %s', '             IVSpeed', pkx.readIVSpeed());
  console.log('%s: %s', '          IVSPAttack', pkx.readIVSPAttack());
  console.log('%s: %s', '         IVSPDefense', pkx.readIVSPDefense());
  console.log('%s: %s', '               IsEgg', names.flag[pkx.readIsEgg()]);
  console.log('%s: %s', '         IsNicknamed', names.flag[pkx.readIsNicknamed()]);
  console.log('%s: %s', '      OTNameTradedTo', pkx.readOTNameTradedTo());
  console.log('%s: %s', '              OTName', pkx.readOTName());
  console.log('%s: %s', '     YearEggReceived', pkx.readYearEggReceived());
  console.log('%s: %s', '    MonthEggReceived', pkx.readMonthEggReceived());
  console.log('%s: %s', '      DayEggReceived', pkx.readDayEggReceived());
  console.log('%s: %s', '             YearMet', pkx.readYearMet());
  console.log('%s: %s', '            MonthMet', pkx.readMonthMet());
  console.log('%s: %s', '              DayMet', pkx.readDayMet());
  console.log('%s: %s', '         EggLocation', pkx.readEggLocation());
  console.log('%s: %s', '       MetAtLocation', pkx.readMetAtLocation());
  console.log('%s: %s', '            Pokeball', names.items[pkx.readPokeball()]);
  console.log('%s: %s', '      EncounterLevel', pkx.readEncounterLevel());
  console.log('%s: %s', '            OTGender', names.gender[pkx.readOTGender()]);
  console.log('%s: %s', '       OTGameVersion', names.versions[pkx.readOTGameVersion()]);
  console.log('%s: %s', '           CountryID', pkx.readCountryID());
  console.log('%s: %s', '            RegionID', pkx.readRegionID());
  console.log('%s: %s', '         3DSregionID', pkx.read3DSregionID());
  console.log('%s: %s', '          OTlanguage', names.languages[pkx.readOTlanguage()]);
}

output.report = function(pkx) {
  out += printf('%s: %s', '    PkxEncryptionKey', pkx.readPkxEncryptionKey());
  out += printf('%s: %s', '   SanityPlaceholder', pkx.readSanityPlaceholder());
  out += printf('%s: %s', '            Checksum', pkx.readChecksum());
  out += printf('%s: %s', '   NationalPokedexID', pkx.readNationalPokedexID());
  out += printf('%s: %s', '             Species', names.pokemon[pkx.readNationalPokedexID()]);
  out += printf('%s: %s', '            HeldItem', names.items[pkx.readHeldItem()]);
  out += printf('%s: %s', '                OTID', pkx.readOTID());
  out += printf('%s: %s', '          OTSecretID', pkx.readOTSecretID());
  out += printf('%s: %s', '    ExperiencePoints', pkx.readExperiencePoints());
  out += printf('%s: %s', '             Ability', names.abilities[pkx.readAbility()]);
  out += printf('%s: %s', '       AbilityNumber', pkx.readAbilityNumber());
  out += printf('%s: %s', '    PersonalityValue', pkx.readPersonalityValue());
  out += printf('%s: %s', '              Nature', names.natures[pkx.readNature()]);
  out += printf('%s: %s', '    FatefulEncounter', names.flag[pkx.readFatefulEncounter()]);
  out += printf('%s: %s', '              Gender', names.gender[pkx.readGender()]);
  out += printf('%s: %s', '          Genderless', names.flag[pkx.readGenderless()]);
  out += printf('%s: %s', '                Form', pkx.readForm());
  out += printf('%s: %s', '       HPEffortValue', pkx.readHPEffortValue());
  out += printf('%s: %s', '   AttackEffortValue', pkx.readAttackEffortValue());
  out += printf('%s: %s', '  DefenseEffortValue', pkx.readDefenseEffortValue());
  out += printf('%s: %s', '    SpeedEffortValue', pkx.readSpeedEffortValue());
  out += printf('%s: %s', ' SPAttackEffortValue', pkx.readSPAttackEffortValue());
  out += printf('%s: %s', 'SPDefenseEffortValue', pkx.readSPDefenseEffortValue());
  out += printf('%s: %s', '             Pokerus', names.flag[pkx.readPokerus()]);
  out += printf('%s: %s', '        KalosRibbons', pkx.readKalosRibbons());
  out += printf('%s: %s', '            Nickname', pkx.readNickname());
  out += printf('%s: %s', '             Move1ID', names.moves[pkx.readMove1ID()]);
  out += printf('%s: %s', '             Move2ID', names.moves[pkx.readMove2ID()]);
  out += printf('%s: %s', '             Move3ID', names.moves[pkx.readMove3ID()]);
  out += printf('%s: %s', '             Move4ID', names.moves[pkx.readMove4ID()]);
  out += printf('%s: %s', '      Move1CurrentPP', pkx.readMove1CurrentPP());
  out += printf('%s: %s', '      Move2CurrentPP', pkx.readMove2CurrentPP());
  out += printf('%s: %s', '      Move3CurrentPP', pkx.readMove3CurrentPP());
  out += printf('%s: %s', '      Move4CurrentPP', pkx.readMove4CurrentPP());
  out += printf('%s: %s', '           MovePPUps', pkx.readMovePPUps());
  out += printf('%s: %s', '   Move1IDAtHatching', names.moves[pkx.readMove1IDAtHatching()]);
  out += printf('%s: %s', '   Move2IDAtHatching', names.moves[pkx.readMove2IDAtHatching()]);
  out += printf('%s: %s', '   Move3IDAtHatching', names.moves[pkx.readMove3IDAtHatching()]);
  out += printf('%s: %s', '   Move4IDAtHatching', names.moves[pkx.readMove4IDAtHatching()]);
  out += printf('%s: %s', '   Move4IDAtHatching', names.moves[pkx.readMove4IDAtHatching()]);
  out += printf('%s: %s', '                IVHP', pkx.readIVHP());
  out += printf('%s: %s', '            IVAttack', pkx.readIVAttack());
  out += printf('%s: %s', '           IVDefense', pkx.readIVDefense());
  out += printf('%s: %s', '             IVSpeed', pkx.readIVSpeed());
  out += printf('%s: %s', '          IVSPAttack', pkx.readIVSPAttack());
  out += printf('%s: %s', '         IVSPDefense', pkx.readIVSPDefense());
  out += printf('%s: %s', '               IsEgg', names.flag[pkx.readIsEgg()]);
  out += printf('%s: %s', '         IsNicknamed', names.flag[pkx.readIsNicknamed()]);
  out += printf('%s: %s', '      OTNameTradedTo', pkx.readOTNameTradedTo());
  out += printf('%s: %s', '              OTName', pkx.readOTName());
  out += printf('%s: %s', '     YearEggReceived', pkx.readYearEggReceived());
  out += printf('%s: %s', '    MonthEggReceived', pkx.readMonthEggReceived());
  out += printf('%s: %s', '      DayEggReceived', pkx.readDayEggReceived());
  out += printf('%s: %s', '             YearMet', pkx.readYearMet());
  out += printf('%s: %s', '            MonthMet', pkx.readMonthMet());
  out += printf('%s: %s', '              DayMet', pkx.readDayMet());
  out += printf('%s: %s', '         EggLocation', pkx.readEggLocation());
  out += printf('%s: %s', '       MetAtLocation', pkx.readMetAtLocation());
  out += printf('%s: %s', '            Pokeball', names.items[pkx.readPokeball()]);
  out += printf('%s: %s', '      EncounterLevel', pkx.readEncounterLevel());
  out += printf('%s: %s', '            OTGender', names.gender[pkx.readOTGender()]);
  out += printf('%s: %s', '       OTGameVersion', names.versions[pkx.readOTGameVersion()]);
  out += printf('%s: %s', '           CountryID', pkx.readCountryID());
  out += printf('%s: %s', '            RegionID', pkx.readRegionID());
  out += printf('%s: %s', '         3DSregionID', pkx.read3DSregionID());
  out += printf('%s: %s', '          OTlanguage', names.languages[pkx.readOTlanguage()]);
