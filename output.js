var names      = require("./names.js");
var printf     = require("util").format;
var output     = new Object;
module.exports = output;

output.report = function(pkx) {
  var out = "";
  out += printf("%s: %s\n", "    PkxEncryptionKey", pkx.readPkxEncryptionKey());
  out += printf("%s: %s\n", "   SanityPlaceholder", pkx.readSanityPlaceholder());
  out += printf("%s: %s\n", "            Checksum", pkx.readChecksum());
  out += printf("%s: %s\n", "   NationalPokedexID", pkx.readNationalPokedexID());
  out += printf("%s: %s\n", "             Species", names.pokemon[pkx.readNationalPokedexID()]);
  out += printf("%s: %s\n", "            HeldItem", names.items[pkx.readHeldItem()]);
  out += printf("%s: %s\n", "                OTID", pkx.readOTID());
  out += printf("%s: %s\n", "          OTSecretID", pkx.readOTSecretID());
  out += printf("%s: %s\n", "    ExperiencePoints", pkx.readExperiencePoints());
  out += printf("%s: %s\n", "             Ability", names.abilities[pkx.readAbility()]);
  out += printf("%s: %s\n", "       AbilityNumber", pkx.readAbilityNumber());
  out += printf("%s: %s\n", "    PersonalityValue", pkx.readPersonalityValue());
  out += printf("%s: %s\n", "              Nature", names.natures[pkx.readNature()]);
  out += printf("%s: %s\n", "    FatefulEncounter", names.flag[pkx.readFatefulEncounter()]);
  out += printf("%s: %s\n", "              Gender", names.gender[pkx.readGender()]);
  out += printf("%s: %s\n", "          Genderless", names.flag[pkx.readGenderless()]);
  out += printf("%s: %s\n", "                Form", pkx.readForm());
  out += printf("%s: %s\n", "       HPEffortValue", pkx.readHPEffortValue());
  out += printf("%s: %s\n", "   AttackEffortValue", pkx.readAttackEffortValue());
  out += printf("%s: %s\n", "  DefenseEffortValue", pkx.readDefenseEffortValue());
  out += printf("%s: %s\n", "    SpeedEffortValue", pkx.readSpeedEffortValue());
  out += printf("%s: %s\n", " SPAttackEffortValue", pkx.readSPAttackEffortValue());
  out += printf("%s: %s\n", "SPDefenseEffortValue", pkx.readSPDefenseEffortValue());
  out += printf("%s: %s\n", "             Pokerus", names.flag[pkx.readPokerus()]);
  out += printf("%s: %s\n", "        KalosRibbons", pkx.readKalosRibbons());
  out += printf("%s: %s\n", "            Nickname", pkx.readNickname());
  out += printf("%s: %s\n", "             Move1ID", names.moves[pkx.readMove1ID()]);
  out += printf("%s: %s\n", "             Move2ID", names.moves[pkx.readMove2ID()]);
  out += printf("%s: %s\n", "             Move3ID", names.moves[pkx.readMove3ID()]);
  out += printf("%s: %s\n", "             Move4ID", names.moves[pkx.readMove4ID()]);
  out += printf("%s: %s\n", "      Move1CurrentPP", pkx.readMove1CurrentPP());
  out += printf("%s: %s\n", "      Move2CurrentPP", pkx.readMove2CurrentPP());
  out += printf("%s: %s\n", "      Move3CurrentPP", pkx.readMove3CurrentPP());
  out += printf("%s: %s\n", "      Move4CurrentPP", pkx.readMove4CurrentPP());
  out += printf("%s: %s\n", "           MovePPUps", pkx.readMovePPUps());
  out += printf("%s: %s\n", "   Move1IDAtHatching", names.moves[pkx.readMove1IDAtHatching()]);
  out += printf("%s: %s\n", "   Move2IDAtHatching", names.moves[pkx.readMove2IDAtHatching()]);
  out += printf("%s: %s\n", "   Move3IDAtHatching", names.moves[pkx.readMove3IDAtHatching()]);
  out += printf("%s: %s\n", "   Move4IDAtHatching", names.moves[pkx.readMove4IDAtHatching()]);
  out += printf("%s: %s\n", "   Move4IDAtHatching", names.moves[pkx.readMove4IDAtHatching()]);
  out += printf("%s: %s\n", "                IVHP", pkx.readIVHP());
  out += printf("%s: %s\n", "            IVAttack", pkx.readIVAttack());
  out += printf("%s: %s\n", "           IVDefense", pkx.readIVDefense());
  out += printf("%s: %s\n", "             IVSpeed", pkx.readIVSpeed());
  out += printf("%s: %s\n", "          IVSPAttack", pkx.readIVSPAttack());
  out += printf("%s: %s\n", "         IVSPDefense", pkx.readIVSPDefense());
  out += printf("%s: %s\n", "               IsEgg", names.flag[pkx.readIsEgg()]);
  out += printf("%s: %s\n", "         IsNicknamed", names.flag[pkx.readIsNicknamed()]);
  out += printf("%s: %s\n", "      OTNameTradedTo", pkx.readOTNameTradedTo());
  out += printf("%s: %s\n", "              OTName", pkx.readOTName());
  out += printf("%s: %s\n", "     YearEggReceived", pkx.readYearEggReceived());
  out += printf("%s: %s\n", "    MonthEggReceived", pkx.readMonthEggReceived());
  out += printf("%s: %s\n", "      DayEggReceived", pkx.readDayEggReceived());
  out += printf("%s: %s\n", "             YearMet", pkx.readYearMet());
  out += printf("%s: %s\n", "            MonthMet", pkx.readMonthMet());
  out += printf("%s: %s\n", "              DayMet", pkx.readDayMet());
  out += printf("%s: %s\n", "         EggLocation", pkx.readEggLocation());
  out += printf("%s: %s\n", "       MetAtLocation", pkx.readMetAtLocation());
  out += printf("%s: %s\n", "            Pokeball", names.items[pkx.readPokeball()]);
  out += printf("%s: %s\n", "      EncounterLevel", pkx.readEncounterLevel());
  out += printf("%s: %s\n", "            OTGender", names.gender[pkx.readOTGender()]);
  out += printf("%s: %s\n", "       OTGameVersion", names.versions[pkx.readOTGameVersion()]);
  out += printf("%s: %s\n", "           CountryID", pkx.readCountryID());
  out += printf("%s: %s\n", "            RegionID", pkx.readRegionID());
  out += printf("%s: %s\n", "         3DSregionID", pkx.read3DSregionID());
  out += printf("%s: %s\n", "          OTlanguage", names.languages[pkx.readOTlanguage()]);
  return out;
}
