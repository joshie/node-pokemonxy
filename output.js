var names      = require("./names.js");
var printf     = require("util").format;
var output     = new Object;
module.exports = output;

output.report = function(pkx,t) {
  if (typeof(t) === 'undefined') {
    t = "\n";
  }
  var out = "";
  out += printf("%s: %s%s", "    PkxEncryptionKey", pkx.readPkxEncryptionKey(), t);
  out += printf("%s: %s%s", "   SanityPlaceholder", pkx.readSanityPlaceholder(), t);
  out += printf("%s: %s%s", "            Checksum", pkx.readChecksum(), t);
  out += printf("%s: %s%s", "   NationalPokedexID", pkx.readNationalPokedexID(), t);
  out += printf("%s: %s%s", "             Species", names.pokemon[pkx.readNationalPokedexID()], t);
  out += printf("%s: %s%s", "            HeldItem", names.items[pkx.readHeldItem()], t);
  out += printf("%s: %s%s", "                OTID", pkx.readOTID(), t);
  out += printf("%s: %s%s", "          OTSecretID", pkx.readOTSecretID(), t);
  out += printf("%s: %s%s", "    ExperiencePoints", pkx.readExperiencePoints(), t);
  out += printf("%s: %s%s", "             Ability", names.abilities[pkx.readAbility()], t);
  out += printf("%s: %s%s", "       AbilityNumber", pkx.readAbilityNumber(), t);
  out += printf("%s: %s%s", "    PersonalityValue", pkx.readPersonalityValue(), t);
  out += printf("%s: %s%s", "              Nature", names.natures[pkx.readNature()], t);
  out += printf("%s: %s%s", "    FatefulEncounter", names.flag[pkx.readFatefulEncounter()], t);
  out += printf("%s: %s%s", "              Gender", names.gender[pkx.readGender()], t);
  out += printf("%s: %s%s", "          Genderless", names.flag[pkx.readGenderless()], t);
  out += printf("%s: %s%s", "                Form", pkx.readForm(), t);
  out += printf("%s: %s%s", "       HPEffortValue", pkx.readHPEffortValue(), t);
  out += printf("%s: %s%s", "   AttackEffortValue", pkx.readAttackEffortValue(), t);
  out += printf("%s: %s%s", "  DefenseEffortValue", pkx.readDefenseEffortValue(), t);
  out += printf("%s: %s%s", "    SpeedEffortValue", pkx.readSpeedEffortValue(), t);
  out += printf("%s: %s%s", " SPAttackEffortValue", pkx.readSPAttackEffortValue(), t);
  out += printf("%s: %s%s", "SPDefenseEffortValue", pkx.readSPDefenseEffortValue(), t);
  out += printf("%s: %s%s", "             Pokerus", names.flag[pkx.readPokerus()], t);
  out += printf("%s: %s%s", "        KalosRibbons", pkx.readKalosRibbons(), t);
  out += printf("%s: %s%s", "            Nickname", pkx.readNickname(), t);
  out += printf("%s: %s%s", "             Move1ID", names.moves[pkx.readMove1ID()], t);
  out += printf("%s: %s%s", "             Move2ID", names.moves[pkx.readMove2ID()], t);
  out += printf("%s: %s%s", "             Move3ID", names.moves[pkx.readMove3ID()], t);
  out += printf("%s: %s%s", "             Move4ID", names.moves[pkx.readMove4ID()], t);
  out += printf("%s: %s%s", "      Move1CurrentPP", pkx.readMove1CurrentPP(), t);
  out += printf("%s: %s%s", "      Move2CurrentPP", pkx.readMove2CurrentPP(), t);
  out += printf("%s: %s%s", "      Move3CurrentPP", pkx.readMove3CurrentPP(), t);
  out += printf("%s: %s%s", "      Move4CurrentPP", pkx.readMove4CurrentPP(), t);
  out += printf("%s: %s%s", "           MovePPUps", pkx.readMovePPUps(), t);
  out += printf("%s: %s%s", "   Move1IDAtHatching", names.moves[pkx.readMove1IDAtHatching()], t);
  out += printf("%s: %s%s", "   Move2IDAtHatching", names.moves[pkx.readMove2IDAtHatching()], t);
  out += printf("%s: %s%s", "   Move3IDAtHatching", names.moves[pkx.readMove3IDAtHatching()], t);
  out += printf("%s: %s%s", "   Move4IDAtHatching", names.moves[pkx.readMove4IDAtHatching()], t);
  out += printf("%s: %s%s", "   Move4IDAtHatching", names.moves[pkx.readMove4IDAtHatching()], t);
  out += printf("%s: %s%s", "                IVHP", pkx.readIVHP(), t);
  out += printf("%s: %s%s", "            IVAttack", pkx.readIVAttack(), t);
  out += printf("%s: %s%s", "           IVDefense", pkx.readIVDefense(), t);
  out += printf("%s: %s%s", "             IVSpeed", pkx.readIVSpeed(), t);
  out += printf("%s: %s%s", "          IVSPAttack", pkx.readIVSPAttack(), t);
  out += printf("%s: %s%s", "         IVSPDefense", pkx.readIVSPDefense(), t);
  out += printf("%s: %s%s", "               IsEgg", names.flag[pkx.readIsEgg()], t);
  out += printf("%s: %s%s", "         IsNicknamed", names.flag[pkx.readIsNicknamed()], t);
  out += printf("%s: %s%s", "      OTNameTradedTo", pkx.readOTNameTradedTo(), t);
  out += printf("%s: %s%s", "              OTName", pkx.readOTName(), t);
  out += printf("%s: %s%s", "     YearEggReceived", pkx.readYearEggReceived(), t);
  out += printf("%s: %s%s", "    MonthEggReceived", pkx.readMonthEggReceived(), t);
  out += printf("%s: %s%s", "      DayEggReceived", pkx.readDayEggReceived(), t);
  out += printf("%s: %s%s", "             YearMet", pkx.readYearMet(), t);
  out += printf("%s: %s%s", "            MonthMet", pkx.readMonthMet(), t);
  out += printf("%s: %s%s", "              DayMet", pkx.readDayMet(), t);
  out += printf("%s: %s%s", "         EggLocation", pkx.readEggLocation(), t);
  out += printf("%s: %s%s", "       MetAtLocation", pkx.readMetAtLocation(), t);
  out += printf("%s: %s%s", "            Pokeball", names.items[pkx.readPokeball()], t);
  out += printf("%s: %s%s", "      EncounterLevel", pkx.readEncounterLevel(), t);
  out += printf("%s: %s%s", "            OTGender", names.gender[pkx.readOTGender()], t);
  out += printf("%s: %s%s", "       OTGameVersion", names.versions[pkx.readOTGameVersion()], t);
  out += printf("%s: %s%s", "           CountryID", pkx.readCountryID(), t);
  out += printf("%s: %s%s", "            RegionID", pkx.readRegionID(), t);
  out += printf("%s: %s%s", "         3DSregionID", pkx.read3DSregionID(), t);
  out += printf("%s: %s%s", "          OTlanguage", names.languages[pkx.readOTlanguage()], t);
  return out;
}
